"use strict";

function $(t, e) {
    return "#" !== t.charAt(0) || t.match(/\.|\[|\(|\:/) ? (e || document).querySelector(t) : document.getElementById(t.slice(1))
}

function setHash(t) {
    history.replaceState ? history.replaceState(t, null, t) : location.hash = t
}

function Ticker() {
    var t = {};

    function e() {
        for (var i in t) t[i].enabled && !1 === t[i].callback() && delete t[i];
        requestAnimationFrame(e)
    }

    function i(t) {
        console.log('Error: the given id "' + t + '" does not refer to any callback')
    }
    this.start = function() {
        e()
    }, this.hook = function(e, i) {
        t[e] = {
            callback: i,
            enabled: !0
        }
    }, this.unhook = function(e) {
        e in t ? delete t[e] : i(e)
    }, this.enable = function(e) {
        e in t ? t[e].enabled = !0 : i(e)
    }, this.disable = function(e) {
        e in t ? t[e].enabled = !1 : i(e)
    }
}

function MenuHandler(t, e, i) {
    function n(t) {
        t.hasAttribute("aria-current") || ($('[aria-current="true"]').removeAttribute("aria-current"), t.parentElement.setAttribute("aria-current", "true"))
    }

    function s(t, e) {
        var i = e.getAttribute("href");
        n(e), t.preventDefault(), t.stopPropagation(), setHash(i), $(i).scrollIntoView({
            block: "start",
            inline: "nearest",
            behavior: "smooth"
        }), document.activeElement.blur()
    }
    this.getActiveMenuId = function() {
        return $('[aria-current="true"] > a').getAttribute("href").split("#")[1]
    };
    for (var o = 0; o < e.length; o++) e[o].addEventListener("click", function(t) {
        s(t, t.currentTarget)
    });
    i.addEventListener("click", function(t) {
        s(t, e[0])
    }), t.hook("updateActiveMenu", function() {
        for (var t, i = document.documentElement.clientHeight || document.body.clientHeight || window.innerHeight, s = Math.round(i / 3), o = 0; o < e.length; o++) {
            var a = $("#" + e[o].getAttribute("href").split("#")[1]).getBoundingClientRect();
            if (parseInt(a.top, 10), parseInt(a.bottom, 10) >= s) {
                t = e[o];
                break
            }
        }
        n(t)
    })
}

function ProjectModal(t) {
    var e = !1,
        i = t.length;
    this.current = 0, this.dragging = !1, this.swipeX = 0, this.offsetX = 0, this.isOpened = function() {
        return e
    }, this.open = function() {
        this.wrapper = document.createElement("div"), this.content = document.createElement("div"), this.media = document.createElement("div"), this.info = document.createElement("div"), this.buttons = {
            container: document.createElement("div"),
            previous: document.createElement("button"),
            next: document.createElement("button"),
            close: document.createElement("button")
        }, this.logo = document.createElement("div"), this.name = document.createElement("div"), this.details = {
            container: document.createElement("div"),
            type: document.createElement("div"),
            tools: document.createElement("div")
        }, this.description = document.createElement("div"), this.wrapper.setAttribute("class", "modal__wrapper"), this.wrapper.setAttribute("data-projects", i), this.content.setAttribute("class", "modal__content"), this.content.setAttribute("tabindex", "0"), this.media.setAttribute("class", "modal__media"), this.info.setAttribute("class", "modal__info"), this.buttons.container.setAttribute("class", "modal__buttons"), this.buttons.previous.setAttribute("class", "modal__button modal__button-prev"), this.buttons.previous.setAttribute("title", lang.txtPrev), this.buttons.previous.innerHTML = "<span>&larr;</span>", this.buttons.close.setAttribute("class", "modal__button modal__button-close"), this.buttons.close.setAttribute("title", lang.txtClose), this.buttons.close.innerHTML = "<span>&times;</span>", this.buttons.next.setAttribute("class", "modal__button modal__button-next"), this.buttons.next.setAttribute("title", lang.txtNext), this.buttons.next.innerHTML = "<span>&rarr;</span>", this.logo.setAttribute("class", "modal__logo"), this.name.setAttribute("class", "modal__name font--title text--center"), this.details.container.setAttribute("class", "modal__details"), this.details.type.setAttribute("class", "modal__details-type color--a-m"), this.details.tools.setAttribute("class", "modal__details-tools"), this.description.setAttribute("class", "modal__description"), document.body.appendChild(this.wrapper), this.wrapper.appendChild(this.content), this.content.appendChild(this.media), this.content.appendChild(this.info), this.info.appendChild(this.buttons.container), this.buttons.container.appendChild(this.buttons.previous), this.buttons.container.appendChild(this.buttons.close), this.buttons.container.appendChild(this.buttons.next), this.info.appendChild(this.logo), this.info.appendChild(this.name), this.info.appendChild(this.details.container), this.details.container.appendChild(this.details.type), this.details.container.appendChild(this.details.tools), this.info.appendChild(this.description), setTimeout(function() {
            this.content.classList.add("modal__content--loaded")
        }.bind(this), 350), this.wrapper.addEventListener("click", function(t) {
            t.target === this.wrapper && this.close()
        }.bind(this)), this.buttons.previous.addEventListener("click", this.previous.bind(this)), this.buttons.close.addEventListener("click", this.close.bind(this)), this.buttons.next.addEventListener("click", this.next.bind(this)), this.wrapper.addEventListener("mousedown", function(t) {
            this.onDown(t, "mouse")
        }.bind(this)), this.wrapper.addEventListener("touchstart", function(t) {
            this.onDown(t, "touch")
        }.bind(this)), this.wrapper.addEventListener("mousemove", function(t) {
            this.onMove(t, "mouse")
        }.bind(this)), this.wrapper.addEventListener("touchmove", function(t) {
            this.onMove(t, "touch")
        }.bind(this)), this.wrapper.addEventListener("mouseup", function(t) {
            this.onUp(t, "mouse")
        }.bind(this)), this.wrapper.addEventListener("touchend", function(t) {
            this.onUp(t, "touch")
        }.bind(this)), e = !0, document.activeElement.blur(), this.content.focus()
    }, this.load = function(e) {
        this.isOpened() || this.open();
        var n = 0;
        "-" !== e && "+" !== e || (n = 350, "-" === e ? (this.content.classList.add("modal__content--previous"), this.content.classList.add("modal__content--switch"), e = 0 === this.current ? i - 1 : this.current - 1) : "+" === e && (this.content.classList.add("modal__content--next"), this.content.classList.add("modal__content--switch"), e = this.current === i - 1 ? 0 : this.current + 1), setTimeout(function() {
            this.content.classList.remove("modal__content--previous"), this.content.classList.remove("modal__content--next"), this.content.classList.remove("modal__content--switch")
        }.bind(this), n)), this.media.classList.remove("loader"), this.current = parseInt(e, 10), this.info.scrollTop = 0;
        var s = t[this.current],
            o = "";
        s.youtube ? (this.media.classList.add("loader"), o = '<iframe src="//www.youtube.com/embed/' + s.youtube + '" allowfullscreen="" style="z-index: 200;" height="100%" frameborder="0" width="100%"></iframe>') : s.embed ? (this.media.classList.add("loader"), o = s.embed) : o = s.slideshow ? '<div class="slideshow">' + s.slideshow.map(function(t, e) {
            return '<input type="radio" name="slideshow" id="slideshow_item_' + e + '" class="slideshow__radio visually-hidden" value="' + e + '" ' + (0 === e ? " checked" : "") + '><label for="slideshow_item_' + e + '" class="slideshow__label"><div class="slideshow__label-thumbnail" style="background-image: url(' + t.tb + ')" role="img" aria-label="Thumbnail for image ' + (e + 1) + " out of " + s.slideshow.length + '"></div></label>'
        }).join(" ") + '<div class="slideshow__container loader">' + s.slideshow.map(function(t, e) {
            return '<div class="slideshow__container-image" style="background-image: url(' + t.o + ')" role="img" aria-label="Full-sized image ' + (e + 1) + " out of " + s.slideshow.length + '"></div>'
        }).join("") + "</div></div>" : '<div class="modal__image loader"><img src="' + s.image + '" alt="' + s.name + ' image" class="modal__image-img"></div>', setTimeout(function() {
            this.wrapper.setAttribute("data-current-project", this.current + 1), this.media.innerHTML = o, this.logo.innerHTML = '<img src="' + s.logo + '" alt="Project logo" class="modal__logo-image">', this.name.innerText = s.name, this.details.type.innerText = s.type.join(" / "), this.details.tools.innerHTML = s.tools.map(function(t) {
                return '<span class="tool-icon tool-icon__' + t.toLowerCase().replace(/\s+/g, "") + '" data-tip="' + t + '" data-tip-nowrap="true" data-tip-reverse="true" data-tip-position="left" aria-label="' + t + '" role="img">' + t + "</span>"
            }).join(" "), this.description.innerHTML = s.description
        }.bind(this), n)
    }, this.previous = function() {
        this.load("-")
    }, this.next = function() {
        this.load("+")
    }, this.close = function() {
        document.body.removeChild(projectModal.wrapper), e = !1
    }, this.onDown = function(t, e) {
        var i = !1;
        this.dragging = !0, this.swipeX = "touch" === e ? t.touches[0].pageX : t.pageX, "mouse" === e ? (t.preventDefault(), i = this.buttons.container) : "touch" === e && (i = this.info), i && (t.target === i || i.contains(t.target) ? this.dragging = !1 : this.wrapper.classList.add("modal--dragging"))
    }, this.onMove = function(t, e) {
        if (this.dragging) {
            var i = window.innerWidth || document.documentElement.clientWidth,
                n = "touch" === e ? t.touches[0].pageX : t.pageX;
            this.offsetX = (n - this.swipeX) / i * 100, this.content.style.transform = "translateX(" + this.offsetX + "vw)", this.content.style.transition = "transform 0s linear", this.media.style.opacity = 1 - Math.abs(this.offsetX / 100), this.media.style.transition = "opacity 0s linear", this.info.style.opacity = 1 - Math.abs(this.offsetX / 100), this.info.style.transition = "opacity 0s linear"
        }
    }, this.onUp = function(t, e) {
        this.offsetX > 25 ? this.previous() : this.offsetX < -25 && this.next(), this.content.style.removeProperty("transform"), this.content.style.removeProperty("transition"), this.media.style.removeProperty("opacity"), this.media.style.removeProperty("transition"), this.info.style.removeProperty("opacity"), this.info.style.removeProperty("transition"), this.wrapper.classList.remove("modal--dragging"), this.dragging = !1, this.offsetX = 0, this.swipeX = 0
    }
}
window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || function(t) {
    window.setTimeout(t, Math.round(1e3 / 60))
};
var ticker = new Ticker,
    projectModal = new ProjectModal(projects);
document.addEventListener("DOMContentLoaded", function(t) {
        var e, i, n = new MenuHandler(ticker, document.querySelectorAll(".js-menuLink"), $("#menu-logo"));
        ticker.hook("portfolioVideo", function() {
                var t = $("#portfolio-video");
                t && ("portfolio" === n.getActiveMenuId() || t.paused ? "portfolio" === n.getActiveMenuId() && t.paused && t.play() : t.pause())
            }),
            function() {
                var t = $("#projects-list");
                t.innerHTML = "";
                for (var e = 0; e < projects.length; e++) {
                    var i = projects[e],
                        n = document.createElement("button");
                    n.setAttribute("type", "button"), n.setAttribute("class", "project"), n.setAttribute("aria-labelledby", "project-name-" + e), n.setAttribute("data-project-id", e), n.innerHTML += '\n<div class="project__frame">\n<div class="project__image" style="background-image: url(' + i.background + ');" aria-hidden="true"></div>\n<img src="' + i.logo + '" class="project__logo" alt="' + i.name + ' logo">\n<span class="project__name" id="project-name-' + e + '">' + i.name + "</span>\n</div>\n\n", t.appendChild(n), n.addEventListener("click", function(t) {
                        var e = t.currentTarget.getAttribute("data-project-id"),
                            i = parseInt(e, 10);
                        projectModal.load(i)
                    })
                }
            }(), e = $("#about-image"), (i = new Image).src = e.getAttribute("data-lazy-src"), i.onload = function() {
                e.setAttribute("src", e.getAttribute("data-lazy-src")), e.removeAttribute("data-lazy-src")
            }, document.addEventListener("keyup", function(t) {
                if (t = t || window.event, projectModal.isOpened())
                    if (27 == t.keyCode || "Esc" == t.key || "Escape" == t.key) {
                        if (projectModal.dragging) return void projectModal.onUp(!1, "mouse");
                        projectModal.close()
                    } else 37 == t.keyCode || "Left" == t.key || "ArrowLeft" == t.key ? projectModal.previous() : 39 != t.keyCode && "Right" != t.key && "ArrowRight" != t.key || projectModal.next()
            }), ticker.start()
    }),
    function() {
        for (var t = window.innerWidth, e = document.querySelectorAll("[data-video-responsive]"), i = function(t, e, i) {
                var n = t.getAttribute("class"),
                    s = t.getAttribute("id");
                t.outerHTML = '<video poster="' + i + '" muted autoplay loop playsinline class="' + n + '" id="' + s + '" tabindex="-1">    <source src="' + e + '.webm" type="video/webm">    <source src="' + e + '.mp4" type="video/mp4"></video>'
            }, n = 0; n < e.length; n++) {
            var s = e[n].getAttribute("src"),
                o = e[n].getAttribute("data-video-poster"),
                a = e[n].getAttribute("data-video-srcset").split(",").map(function(t) {
                    return t.trim()
                });
            t < 520 || (t <= 1440 ? i(e[n], a[0], s) : i(e[n], a[1], o))
        }
    }();